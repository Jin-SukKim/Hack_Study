pwntools :
    pack / unpack :
        pack과 unpack은 각각의 데이터 크기에 맞게 데이터를 변환할 때 사용합니다.

        패킹 함수는 정수를 인자로 받아 패킹한 후 문자열 형태로 리턴합니다.
        반면에 언패킹 함수는 문자열을 인자로 받아 언패킹 한 후 정수 형태로 리턴합니다. 
        두 함수는 리틀 엔디언 혹은 빅 엔디언 형태로 지정해줄 수 있고, 지정하지 않는다면 리틀 엔디언 형태로 변환합니다. 
        데이터 크기에 따라 함수가 존재하기 때문에 데이터에 맞게 사용해야 합니다.

        pack :
            p8은 1 바이트의 데이터를 패킹하는 함수입니다.
            ex)
                print p8(0x41)
                A

            0x41을 문자 형태로 변환하여 A를 리턴한 것을 확인할 수 있습니다.

            p16은 2 바이트의 데이터를 패킹하는 함수입니다.
            ex)
                print p16(0x4142)
                BA

            0x4142를 리틀 엔디언의 형태로 변환하여 "BA"를 리턴한 것을 확인할 수 있습니다.

            p32는 4 바이트의 데이터를 패킹하는 함수입니다.
            ex)
                print p32(0x41424344)
                DCBA

            0x41424344를 리틀 엔디언의 형태로 변환하여 "DCBA"를 리턴한 것을 확인할 수 있습니다.

            p64는 8 바이트의 데이터를 패킹하는 함수입니다.
            ex)
                print p64(0x4142434445464748)
                HGFEDCBA

            0x4142434445464748을 리틀 엔디언의 형태로 변환하여 "HGFEDCBA"를 리턴한 것을 확인할 수 있습니다.

            빅 엔디언으로 변환을 하기 위해서는 두 번째 인자로 endian='big'을 명시해주면 됩니다.
            ex)
                print p16(0x4142,endian='big')
                AB
                print p32(0x41424344, endian='big')
                ABCD
                print p64(0x4142434445464748, endian='big')
                ABCDEFGH

        unpack :
            u8은 1 바이트의 데이터를 언패킹 하는 함수입니다.
            ex)
                print u8("A")
                65

            "A"를 정수 형태로 변환하여 65를 리턴한 것을 확인할 수 있습니다.

            u16은 2 바이트의 데이터를 언패킹 하는 함수입니다.
            ex)
                print u16("AB")
                16961
                print hex(16961)
                0x4241

            "AB"를 정수 형태로 변환하여 16961을 리턴한 것을 확인할 수 있습니다.
            hex 함수를 사용하여 16 진수로 변환하면 0x4241인 것을 알 수 있습니다.

            u32는 4 바이트의 데이터를 언패킹 하는 함수입니다.
            ex)
                print u32("ABCD")
                1145258561
                print hex(1145258561)
                0x44434241

            "ABCD"를 정수 형태로 변환하여 1145258561를 리턴한 것을 확인할 수 있습니다. 
            hex 함수를 사용하여 16 진수로 변환하면 0x44434241인 것을 알 수 있습니다.

            u64는 8 바이트의 데이터를 언패킹 하는 함수입니다.
            ex)
                print u64("ABCDEFGH")
                5208208757389214273
                print hex(5208208757389214273)
                0x4847464544434241

            "ABCDEFGH"를 정수 형태로 변환하여 5208208757389214273를 리턴한 것을 확인할 수 있습니다.
            hex 함수를 사용하여 16 진수로 변환하면 0x4847464544434241인 것을 알 수 있습니다.

            빅 엔디언으로 변환을 하기 위해서는 두 번째 인자로 endian='big'을 명시해주면 됩니다.
            ex)
                print u64("ABCDEFGH", endian='big')
                4702394921427289928
                print hex(4702394921427289928)
                0x4142434445464748



















