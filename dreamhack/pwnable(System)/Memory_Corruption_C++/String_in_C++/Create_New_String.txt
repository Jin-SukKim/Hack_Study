Create New String - String memory leak :
    ex)
        // g++ -o string-leak string-leak.cpp
        #include <iostream>
        #include <fstream>
        
        int main(void) {
            char buffer[32];
            std::ifstream is ("test.txt", std::ifstream::binary); //test.txt have 32bytes of "a"
            try {
                is.read(buffer, sizeof(buffer));
            } catch (std::ios_base::failure &e) {
                // Error handling
            }
            std::cout << buffer << std::endl;
        }

    string-leak.cpp는 32 바이트 크기의 char *형 buffer를 할당하고, is.read 함수를 통해 buffer에 문자열을 입력받습니다.
    이후 buffer을 새로운 string에 전달해 주게 됩니다.

    is.read 함수는 C언어의 read 함수를 std::ifstream 객체에서 사용할 수 있게 포팅한 함수로, C언어의 read 함수와 동일한 동작을 수행합니다.
    따라서 이 경우 버퍼를 입력받은 후 널 바이트와 같은 터미네이터를 별도로 추가하지 않기 때문에 메모리 릭이 발생할 수 있습니다.
    ex)
        $ ./string-leak
        aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa��ږ/V
































