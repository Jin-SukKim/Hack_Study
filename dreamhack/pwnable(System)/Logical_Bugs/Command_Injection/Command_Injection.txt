Command Injection :
    인젝션은 검증되지 않은 공격자의 입력을 셸 커맨드 또는 쿼리 일부로 처리해 정상적인 실행 흐름을 변경할 수 있는 취약점입니다. 
    자열을 Structured Query Language(SQL)의 일부로 처리하면서 발생하는 SQL 인젝션, 
    문자열의 일부를 셸 커맨드에서 처리하면서 발생하는 커맨드 인젝션이 대표적인 공격입니다.

    커맨드 인젝션은 프로그램이 적절한 검증 없이 사용자의 입력을 셸 명령어로 실행할 때 발생하는 취약점입니다.

    공격자는 메타문자와 같은 특수한 문자를 활용해 임의 코드 실행까지 이어지게 할 수 있습니다.
    메타문자는 리눅스 셸 에서 여러 명령어를 한 줄로 실행할 수 있게 해 주는 특수문자입니다.
    아래는 메타문자에 대한 설명을 포함한 그림입니다.

    Meta 문자   설명                    Example

    $           쉘 환경변수             $ echo $PWD
                                        /home/theori
        
    &&          이전 명령어 실행 후      $ echo hello && echo theori
                다음 명령어 실행         hello
                                        theori
        
    ;           명령어 구분자           $ echo hello ; echo theori
                                        hello
                                        theori
        
    |           명령어 파이핑           $ echo id | /bin/sh
                                        uid=1001(theori) gid=1001(theori) groups=1001(theori)
        
    *           와일드 카드             $ echo .*
                                        . ..
        
    `           명령어 치환             $ echo `echo hellotheori`
                                        hellotheori


    cmdi.c는 사용자가 입력한 IP나 도메인을 ping 명령어의 인자로 system 함수를 실행하는 코드입니다.
        - ping : 네트워크를 통해 특정한 호스트가 도달할 수 있는지의 여부를 테스트하는 데 쓰이는 컴퓨터 네트워크 도구입니다.

    ex)
        // gcc -o cmdi cmdi.c
        #include <stdlib.h>
        #include <stdio.h>
        
        int main()
        {
            char ip[36];
            char cmd[256] = "ping -c 2 "; 
            
            printf("Alive Checker\n");
            printf("IP: ");
            
            read(0, ip, sizeof(ip)-1);
            
            printf("IP Check: %s",ip);
            
            strcat(cmd, ip);
            system(cmd);
            
            return 0;
        }

    예제 파일을 실행하여 "127.0.0.1" 문자열을 입력하면 다음과 같은 명령어가 실행됩니다.
    ex)
        ping 127.0.0.1

    예제 코드에서는 입력한 데이터에 대해 어떠한 검증도 존재하지 않기 때문에 입력 값에 따라 예상치 못한 결과가 생길 수 있습니다.
    만약 입력에 IP나 도메인이 아닌 특수 문자를 사용한다면 원하는 명령어를 삽입하여 하나 이상의 명령어를 실행할 수 있습니다.
    ex)
        $ ./cmdi
        Alive Checker
        IP: 127.0.0.1; /bin/sh 
        IP Check: 127.0.0.1; /bin/sh
        64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.060 ms
        64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.055 ms
        
        --- 127.0.0.1 ping statistics ---
        2 packets transmitted, 2 packets received, 0.0% packet loss
        round-trip min/avg/max/stddev = 0.055/0.057/0.060/0.003 ms
        $

    위는 "127.0.0.1; /bin/sh" 문자열을 입력해 셸을 얻은 결과입니다.

    system함수의 인자로 전달된 명령어는 다음과 같습니다.
    ex)
        ping -c 2 127.0.0.1;/bin/sh

    입력한 명령어 구분자로 인해 ping -c 2 127.0.0.1 명령어가 실행된 이후 /bin/sh가 실행된 것을 확인할 수 있습니다.

    이와 같이 system함수를 실행할 때 사용자의 입력이 들어간다면 셸에서 특별한 의미를 갖는 메타문자에 대한 검증이 필요합니다.

    
























