ELF 동적 디버깅 :
    바이너리를 분석할 때, 바이너리가 실행되며 변화하는 상태를 관찰하기 위해 동적 디버깅이 필요한 경우가 있습니다.
    때문에 바이너리 공격 기법을 익히고 실습하기에 앞서, 리눅스의 실행 파일인 ELF 파일을 동적으로 디버깅하는 방법에 대해 알아보도록 하겠습니다.

    ELF의 동적 분석을 위한 도구로는 gdb, strace, ltrace, IDA 등이 있습니다.
    이 코스에서는 가장 유명한 ELF 디버거인 gdb(GNU Debugger)를 사용하여 ELF 바이너리를 동적 디버깅하는 방법에 대해 알아보겠습니다.

    gdb의 디스어셈블리 문법에는 AT&T와 intel 두 종류가 있습니다.
    이 중 널리 쓰이는 디스어셈블리 문법은 intel 입니다. 
    gdb 기본 설정에서의 디스어셈블리 문법은 AT&T이기 때문에, 디버깅 실습을 하기 전에 gdb의 디스어셈블리 문법을 intel로 바꾸어 주어야 합니다.

    .gdbinit는 gdb를 시작할 때 자동적으로 실행할 gdb 명령어들을 저장하고 있는 파일입니다.
    다음 명령어를 통해 .gdbinit에 gdb의 디스어셈블리 문법을 intel로 바꾸어 주는 명령어인 set disassembly-flavor intel을 추가할 수 있습니다.
    ex) .gdbinit 파일 수정
        $ echo "set disassembly-flavor intel" >> ~/.gdbinit
        $   
                
    ex) disassembly-flavor 설정 확인
        $ gdb -q
        (gdb) show disassembly-flavor 
        The disassembly flavor is "intel".
        (gdb) 

    


























