Relative Path Overwrite (RPO) :
    RPO(Relative Path Ovewrite)란 PHP 등 일부 CGI형태 웹 스크립트에서 스크립트명 이하의 경로를 지정해도 
    같은 페이지가 조회되나 상대 경로 자원 참조는 이에 따라 변하지 않는 경우를 이용한 공격입니다.

    ex) 스크립트를 로드하는 태그가 두개 있습니다.
        <script src="/app/main.js"></script>
        <script src="app/main.js"></script>

        1번째 줄과 2번째 줄의 스크립트 태그의 차이는 src의 맨 앞에 존재하는 /의 차이가 있습니다.

        1번째 줄은 앞에 존재하는 /에 의해 스크립트 로드 시 최상위 경로 부터 시작하여 탐색(절대 경로)하고 로드합니다.
        반면에 2번째 줄의 스크립트는 현재 경로에서 시작해서 탐색(상대 경로)하고 로드하게됩니다.

        index.php에 위 두 스크립트 태그를 작성한 후 http://dreamhack.io/index.php와 같이 접근 시 같은 경로에 존재하는 /app/main.js를 로드합니다.

        하지만 http://dreamhack.io/index.php/와 같이 요청하게 되면 1번째 줄의 스크립트 태그는 절대 경로로 탐색하여 /app/main.js를 로드하지만,
        번째 줄의 스크립트 태그는 현재 경로가 /index.php/이므로 해당 경로 부터 시작하여 /index.php/app/main.js에 존재하는 파일에 대해 요청하게 됩니다.

        ../와 같이 경로를 조작하여 해당 서버에서 원하는 스크립트 등이 해당 페이지에 로드 되도록 유도하여 공격에 사용할 수 있습니다.

    RPO를 방어할 수 있는 최선의 방법은 CSS, JavaScript 등을 참조할 때 절대 경로(e.g. /js/util.js 또는 https://mydomain/js/util.js)를 사용하는 것입니다.

    이외에도 X-Content-Type-Options: nosniff 등으로 HTML 페이지가 CSS나 JavaScript로 해석되지 않도록 할 수 있으며,
    동적 웹 페이지 CGI 또는 $_SERVER의 PATH_INFO 변수를 확인하여 만일 RPO 공격이 탐지될 경우 처리를 중단하는 것이 좋습니다.
























