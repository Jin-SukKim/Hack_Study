CORS :
    SOP의 한계를 극복하고 Origin 간 자원 공유를 돕기 위해 postMessage, JSONP 및 CORS 정책 기술이 도입되었습니다.

    SOP를 우회하기 위해 설계된 만큼 CORS는 잘못 사용될 경우 사이트 간 공격이 가능해지는 취약점이 발생할 수 있습니다. 
    이는 웹 상에 있는 서비스에만 제약되는 것이 아니며,
    일부 P2P 파일 공유 소프트웨어에서 localhost를 통해 제어판을 웹 인터페이스로 제공하였는데 
    CORS 정책이 제대로 설정되어 있지 않아 CSRF 취약점이 발생한 사례가 있습니다.

    이 주제에서는 CSP 기술의 사용에 있어서 주의할 점과 취약점 발생 시 CSRF 등 다른 취약점과 연계되는 방식에 대해 알아보도록 하겠습니다.

    1) 현재 사이트에서 다른 사이트로 정보 유출 (기밀성)
        - CORS는 모든 정보를 공개하는 Open API뿐만 아니라 특정 대상에게만 자원을 공유하고자 하는 사이트에서도 사용될 수 있습니다. 
        - 만일 다른 사이트로부터 CORS 요청을 받을 때 그 Origin에 대한 검사가 진행되지 않고 응답하거나 
          Origin에 제약이 없는 경우 사용자의 신원 등 민감한 정보가 다른 사이트에 노출될 수 있습니다.

    2) 다른 사이트에서 현재 사이트 변조 (무결성)
        - CORS 요청의 Origin이 신뢰할 수 있는 출처인지 확인 또는 제한하지 않거나 CORS 응답을 그대로 사용할 경우 XSS 등 보안 문제가 발생할 수 있습니다. 
        - CORS 기술을 도입할 때 어떤 사이트를 얼마나 신뢰하느냐가 결정되어야 하며, 
          XSS 필터 등 신뢰하지 않는 입력에 대한 방어 또한 병행되어야 합니다.


























