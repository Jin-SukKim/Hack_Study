File Upload :
    웹 서비스를 통해 파일을 서버에 업로드해 다른 사용자들과 공유하기 위한 기능

    사용자의 파일이 서버의 파일 시스템에 저장되어 처리됨 = 취약점
        ㄴ 파일의 내용과 함께 파일의 이름도 함께 서버로 전송

    서버에 검증 x => 서버의 파일 시스템에 원하는 파일 저장 가능

ex)
    File Upload Code :

        from flask import Flask, request
        app = Flask(__name__) 
        @app.route('/fileUpload', methods = ['GET', 'POST'])
        def upload_file():
            if request.method == 'POST':
                f = request.files['file']
                f.save("./uploads/" + f.filename)
                return 'Upload Success'
            else:
                return """
                <form action="/fileUpload" method="POST" enctype="multipart/form-data">
                    <input type="file" name="file" />
                    <input type="submit"/>
                </form>
                """
        if __name__ == '__main__':
            app.run()

    정삭적인 Request : 
        // ls -R : ls command to display the contents of the subdirectories recursively
        - HTTP Request

            POST /fileUpload HTTP/1.1
            Host: storage.dreamhack.io
            Origin: https://storage.dreamhack.io
            Content-Type: multipart/form-data; boundary=----WebKitFormBoundary20y3eoLVSNf9Ns5i
            ------WebKitFormBoundary20y3eoLVSNf9Ns5i
            Content-Disposition: form-data; name="file"; filename="test.txt"
            Content-Type: text/plain
            upload test !
            ------WebKitFormBoundary20y3eoLVSNf9Ns5i--

        - Server File System :

            $ ls -lR
            -rw-r--r--  1 dreamhack  staff  461  1 30 21:52 app.py
            drwxr-xr-x  3 dreamhack  staff   96  1 30 21:31 uploads
            
            ./uploads:
            total 8
            -rw-r--r--  1 dreamhack  staff   13  1 30 21:31 test.txt
            //uploads디렉토리에 정상적으로 업로드 된것을 알 수 있습니다.

    악의적인 Request :

        - HTTP Request

            POST /fileUpload HTTP/1.1
            Host: storage.dreamhack.io
            Origin: https://storage.dreamhack.io
            Content-Type: multipart/form-data; boundary=----WebKitFormBoundary20y3eoLVSNf9Ns5i
            ------WebKitFormBoundary20y3eoLVSNf9Ns5i
            Content-Disposition: form-data; name="file"; filename="../hack.py"
            Content-Type: text/plain
            [malicious file content]
            ------WebKitFormBoundary20y3eoLVSNf9Ns5i--
        // filename에 상위 디렉토리로 이동하는 ../문자를 삽입한 요청입니다.

        - Server File System :

            $ ls -lR
            -rw-r--r--  1 dreamhack  staff  461  1 30 21:52 app.py
            -rw-r--r--  1 dreamhack  staff  431  1 30 22:12 hack.py
            drwxr-xr-x  3 dreamhack  staff   96  1 30 21:31 uploads
            ./uploads:
            total 8
            -rw-r--r--  1 dreamhack  staff   13  1 30 21:31 test.txt
        // uploads디렉토리를 벗어난 경로에 파일이 업로드 된것을 확인할 수 있습니다.


