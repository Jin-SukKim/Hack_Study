임시/백업 파일 :
    웹 서버 디렉토리내에 임시파일이나 백업파일이 존재한다면 디렉토리 스캐너를 통해 파일이 유출될 수 있습니다. 
    자주 사용되는 임시 파일과 백업파일은 swp, ~, bak, sql등이 있습니다.


    ubuntu@u1804aws:/tmp/test$ ls -al
    total 24
    drwxrwxr-x  2 ubuntu ubuntu  4096 Mar  4 07:04 .
    drwxrwxrwt 16 root   root    4096 Mar  4 08:19 ..
    -rw-------  1 ubuntu ubuntu 12288 Mar  4 08:19 .hello.php.swp
    -rw-rw-r--  1 ubuntu ubuntu   109 Mar  4 08:19 hello.php
    ubuntu@u1804aws:/tmp/test$ 

    hello.php 파일을 vim 에디터로 열게되면 .hello.php.swp 라는 임시 파일이 생성됩니다.
    
    웹 서버는 .php 확장자를 php script로 인식해 실행 결과를 응답하지만 
    .swp 확장자는 바이너리 파일로 인식해 파일 내용 (소스 코드) 가 포함된 임시파일을 응답하게됩니다.

    <?php
    if ($_GET['password'] === 'this_is_secret_password') {
            system($_GET['cmd']);
    } else {
            echo 'Nope';
    }

    hello.php는 password가 일치하면 임의 명령을 실행해주는 php 파일입니다.

    공격자는 소스코드에 정의되어 있는 this_is_secret_password를 알 수 없습니다.
    하지만 개발자가 vim 에디터로 수정중에 생긴 .swp를 통해 소스코드를 획득할 수 있습니다.

    .swp파일을 다운로드 받아 vim hello.php 명령어를 입력하게 되면 아래와 같은 메시지를 확인할 수 있습니다.

    E325: ATTENTION
    Found a swap file by the name ".hello.php.swp"
            owned by: ubuntu   dated: Wed Mar  4 08:24:26 2020
            file name: /tmp/test/hello.php
            modified: no
            user name: ubuntu   host name: u1804aws
            process ID: 15961
    While opening file "hello.php"
    (1) Another program may be editing the same file.  If this is the case,
        be careful not to end up with two different instances of the same
        file when making changes.  Quit, or continue with caution.
    (2) An edit session for this file crashed.
        If this is the case, use ":recover" or "vim -r hello.php"
        to recover the changes (see ":help recovery").
        If you did this already, delete the swap file ".hello.php.swp"
        to avoid this message.
    Swap file ".hello.php.swp" already exists!
    [O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort: 

    R키 (Recover)를 눌러주면 복구를 진행할 수 있습니다.

    "hello.php" [New File]
    Using swap file ".hello.php.swp"
    "/tmp/test/hello.php" [New File]
    Recovery completed. You should check if everything is OK.
    (You might want to write out this file under another name
    and run diff with the original file to check for changes)
    You may want to delete the .swp file now.
    Press ENTER or type command to continue

    복구가 되었다는 메시지와 함께 원본 소스코드를 획득한 것을 확인할 수 있습니다.

    vim 에디터의 swp 임시 파일 외에도 공격자에게 악용될 수 있는 여러가지 파일들이 있습니다. 
    아래 표는 위험이될 만한 확장자와 설명입니다.

    확장자                  설명
    bak         백업 파일, 대부분의 에디터에서 사용함
    config      설정 파일, 비밀 키들이 존재하는 경우가 많음
    sql         sql schema 파일, 데이터 베이스 구조를 알아낼 수 있음
    sh          shell script 파일
    ~           bluefish 에디터 백업 파일

조치 방안 :
    서비스하기 이전에 서버 및 어플리케이션의 설정 및 파일들을 점검하여 서비스와는 무관한 파일들을 제거해야 합니다.

    또한, 위험한 확장자에 대한 요청이 들어올 경우 거부하는 방법으로 위협을 없앨 수 있습니다. 
    아래는 nginx에서 적용가능한 설정 입니다.

    location ~ (?:\.
    (?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

개발 관련 파일 :
    버전 관리 도구(VCS)를 사용해 소스코드를 다운로드 받거나 웹 폴더내에서 직접 개발을 하다 보면 해당 VCS가 자동으로 생성하는 정보 파일이 남습니다.

    dreamhack@dreamhack:/tmp/dreamhack$ ls -al
    total 0
    drwxrwxrwx 1 dreamhack dreamhack 4096 Mar 10 10:34 .
    drwxrwxrwt 1 root root 4096 Mar 10 10:34 ..
    dreamhack@dreamhack:/tmp/dreamhack$ git init
    Initialized empty Git repository in /tmp/dreamhack/.git/
    dreamhack@dreamhack:/tmp/dreamhack$ ls -al
    total 0
    drwxrwxrwx 1 dreamhack dreamhack 4096 Mar 10 10:34 .
    drwxrwxrwt 1 root root 4096 Mar 10 10:34 ..
    drwxrwxrwx 1 dreamhack dreamhack 4096 Mar 10 10:34 .git
    dreamhack@dreamhack:/tmp/dreamhack$

    git은 .git폴더가 생성되며 해당 폴더 내 트래킹 되고 있는 파일들의 소스 코드를 쉽게 획득할 수 있습니다.
    init 과정 보다 git clone ..을 통해 저장소를 받아온 후 웹 서버가 바로 서빙되는 경우 발생하기 쉽습니다.

    dreamhack@dreamhack:/tmp/dreamhack$ ls -al
    total 16
    drwxr-xr-x   2 dreamhack dreamhack  4096 Mar  9 18:36 .
    drwxrwxrwt 280 root root 12288 Mar  9 18:36 ..
    dreamhack@dreamhack:/tmp/dreamhack$ hg init
    dreamhack@dreamhack:/tmp/dreamhack$ ls -al
    total 20
    drwxr-xr-x   3 dreamhack dreamhack  4096 Mar  9 18:36 .
    drwxrwxrwt 280 root root 12288 Mar  9 18:36 ..
    drwxr-xr-x   3 dreamhack dreamhack  4096 Mar  9 18:36 .hg
    dreamhack@dreamhack:/tmp/dreamhack$

    hg도 마찬가지로 .hg 폴더를 생성합니다.

    위 두개를 포함한 다양한 VCS 도구가 생성하는 정보는https://github.com/kost/dvcs-ripper 도구를 이용해 쉽게 진단할 수 있습니다.

조치 방안 :
    임시/백업파일과 마찬가지로 서비스하기 이전에 점검하여 서비스와는 무관한 파일들을 제거해야 합니다.

    또한, 웹 URL을 통해 접근하는 것을 차단하는 방법이 있습니다. 
    웹 서버의 설정으로 쉽게 막을 수 있습니다. 아래는 nginx 예시 설정입니다.

    location ~ /\.(git|hg) {
        deny all;
    }







