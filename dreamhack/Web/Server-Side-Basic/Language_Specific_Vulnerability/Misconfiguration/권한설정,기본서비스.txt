권한 설정 문제 :
    대표적인 권한 설정 문제
    1) 기본 계정
        
        - 프레임워크 등에서 기본적으로 제공하는 계정을 삭제하지 않아 문제가 발생할 수 있습니다. 
            프레임워크 등을 통해 제공되는 계정 정보는 ID/PW 등의 정보가 메뉴얼 등을 통해 공개되어 있기 때문에 
            이를 통해 특별한 취약점을 사용하지 않고 권한을 획득할 수 있습니다.

    2) 잘못된 권한 설정
        
        - 웹 서버를 운용 하는 시스템 또는 어플리케이션 상에서 필요 이상의 권한을 부여하는 경우 문제가 발생할 수 있습니다.
        
        - 서비스를 운용하는 OS의 사용자 권한이 일반 유저 또는 시스템 운용을 위해 생성된 계정을 사용하지 않고 
          superuser(root) 권한으로 사용할 경우 서비스의 로직이 superuser권한으로 수행됩니다.
            ㄴ ex) 웹 서버가 superuser 권한으로 동작하며, 파일 관련 취약점이 존재할 경우 
                    일반 사용자 권한이 접근하지 못하는 시스템 파일등에도 접근이 가능하게 되며, 
                    이를 통해 시스템 장악 등의 문제로 연계될 수 있습니다.

        - DB, Docker 등의 어플리케이션 운용 시에도 해당 어플리케이션의 사용자 권한을 필요 이상의 권한을 부여할 경우 문제가 발생할 수 있습니다.
            ㄴ ex) DBMS내에서 root 계정을 사용하게 되면 기본적으로 모든 데이터베이스에 접근이 가능하며, 
                    일반 유저가 사용하지 못하는 함수들도 사용할 수 있습니다. 
                    만약 sql injection 취약점이 발생하게 되면 root 권한으로 사용할 수 있는 함수들을 통해 다른 취약점으로 연계할 수 있는 위협이 존재할 수 있습니다.

기본 서비스 :
    서비스 요소들 운용 시 사용하는 시스템 또는 어플리케이션에서 개발자가 설정하지 않아도 기본적으로 제공되는 기능에 의해 문제가 발생할 수 있습니다.

    대부분 개발 당시에 필요한 기능이거나, 내부적으로 사용해야 하는 기능들입니다. 즉, 운영 시에 의도하지 않은 경로 또는 기능이 노출되는 위협이 발생할 수 있습니다.

    1) 관리 서비스
        - Tomcat - Web Application Manager
        - Docker Registry API

    2) 모니터링 서비스
        - Spring Boot Actuator - metrics
        - Apache mod_status






