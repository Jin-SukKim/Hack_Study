Filesystem function :
        파일 시스템에 접근할 수 있는 함수들의 인자가 사용자의 입력 데이터 또는 변조될 가능성이 있는 변수들을 사용할 경우 서버의 파일 시스템을 공격, 다른 취약점으로 악용

        예) 서버 또는 앱의 환경, 상황에 따라 발생할 수 있는 문제는 각각 다를 수 있습니다.

        File Read 
            - 어플리케이션 코드, 설정 파일 정보 등의 노출
        
            python
                open(filename).read()

            javascript (Nodejs)
                var fs = require('fs');
                fs.readFileSync(filename);
                
            php
                <?php
                file_get_contents($filename);
                fopen($filename, "r");
                readfile($filename);
                show_source($filename);
                highlight_file($filename);  
                ...
                // include 는 리드하는 파일에 php태그가 포함될 경우 해당 php 태그를 해석하고 실행하는 기능도 포함되어 있습니다.
                include $filename;
                ?>

        File Write
            - WebShell 생성을 통한 원격 코드 실행 공격
            - 기존 설정 파일을 덮는 공격을 통해 운영체제 또는 어플리케이션 설정 변경
        
            python
                open(filename, "w").write(data)
            
            javascript (Nodejs)
                var fs = require('fs');
                fs.writeFileSync(filename, data);
            php
                <?php
                file_put_contents($filename, $data);
                fopen($filename, "w");
                ...
                ?>

        etc
            - 파일 복사를 통해 File Write와 유사한 상황 발생
            - 설정 파일을 삭제하여 운영체제 또는 어플리케이션 서비스 무력화

            파일 복사
                # python
                import shutil
                shutil.copy('Original_FILE', 'Copy_FILE')
                
                # javascript (Nodejs)
                const fs = require('fs');
                fs.copyFileSync('Original_FILE', 'Copy_FILE');
                
                # php
                <?php 
                copy('Original_FILE', 'Copy_FILE');
                ?>

            파일 삭제
                # python
                import os
                os.remove(filename)
                
                # javascript (Nodejs)
                const fs = require('fs');
                fs.unlinkSync(filename);
                
                # php
                <?php 
                unlink($filename);
                ?>