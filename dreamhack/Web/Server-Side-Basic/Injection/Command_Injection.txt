Command Injection : 
    - OS Command를 사용 시 사용자의 입력 데이터에 의해 실행되는 Command를 변조할 수 있는 취약점
    OS Command 실행을 위해 PHP(system), NodeJS(chile_process), Python(os.system)과 같은 함수 존재
        ㄴ OS Command란 linus(ls, pwd, ping, zip), windows(dir,pwd,ping)등의 OS에서 사용한는 명령어
    
    Meta 문자
    '' : 명령어 치환 ('' 안에 있는 명령어를 실행한 결과로 바꿔줌)
        ex) $ echo `echo theori`
            theori
    $() : 명령어 치환 (안에 들어 있는 명령어를 실행한 결과로 치환. 중복 사용 가능)
        ex) echo $(echo $(echo theori))
        ex2) $ echo $(echo theori)
             theori
    && : 명령어 연속 실행 (한 줄에 여러 명령어 사용. 앞 명령어에 에러 없어야됨 Logical And)
        ex) $ echo hello && echo theori
            hello
            theori
    || : 명령어 연속 실행 (한 줄에 여러 명령어 사용. 앞 명령어에 에러가 발생해야 뒷 명령어 실행 Logical Or) 
        ex) $ cat / || echo theori
            cat: /: Is a directory
            theori
    ; : 명령어 구분자 (한 줄에 여러 명령어 사용. 에러 유무 상관 x)
        ex) $ echo hello ; echo theori
            hello
            theori
    | : 파이프 (앞 명령어 결과가 뒷 명령어로 들어감)
        ex) $ echo id | /bin/sh
            id=1001(theori) gid=1001(theori) groups=1001(theori)

    Command Injection example :
        @app.route('/ping')
        def ping():
            ip = request.args.get('ip')
            return os.system(f'ping -c 3 {ip}')

        $ echo Command Injection으로 id명령어를 실행하세요
        Command Injection으로 id명령어를 실행하세요

        $ ping -c 3 1.1.1.1; id
        ping command is work
            Injected Command : id
            성공하셨습니다!

        $ ping -c 3 1 && id
        ping command is work
            Injected Command : id
            성공하셨습니다!    
