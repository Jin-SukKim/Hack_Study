NTFS Alternate Data Stream을 이용한 우회 :
    파일 시스템에서 Fork라는 개념은 마치 압축(아카이브) 파일처럼 한 파일명에 메타데이터 등 여러 종류의 데이터(데이터 스트림)를 포함시킬 수 있도록 합니다.

    윈도의 NTFS 파일시스템에서는 이를 ADS(Alternate Data Stream)으로 구현하고 있으며, 각 데이터는 파일명:스트림명 으로 접근할 수 있습니다.

    이를 이용하면 파일 확장자 검사를 우회할 수 있게 됩니다. 
    예를 들어, Shell.php::$DATA. 는 앞서 다룬 . 자동 제거에 의해 Shell.php::$DATA 가 되며
    이는 기본 스트림을 참조하므로 결국 Shell.php 와 같은 파일을 사용하게 됩니다.

    마찬가지로 .htaccess:.jpg 와 같은 형식으로 .htaccess 파일을 생성할 수 있습니다.
    그러나 이 경우 기본 스트림이 아닌 .jpg 스트림을 사용하게 되므로 8.3 파일명 HTACCE~1 로 다시 업로드하는 방식으로 사용하여야 합니다.

    구체적인 NTFS Alternate Data Stream 구문은 다음과 같습니다.
    
        구문                                            설명

    Filename:Stream                     Filename 의 스트림 Stream 을 참조합니다.

    Filename:Stream:$DATA               Filename:Stream 과 같은 의미입니다.

    Filename:                           Filename 의 기본 스트림을 참조합니다. 곧, : 를 붙이지 않았을 떄와 과 같습니다.

    Filename::$DATA                     Filename: 과 같은 의미입니다.

    Dirname::$INDEX_ALLOCATION          해당 파일을 쓰게 되면 파일 대신 디렉터리가 생성됩니다.
                                        $INDEX_ALLOCATION 은 NTFS 내부에서 관리하는 디렉터리 인덱스(데이터베이스 인덱스와 유사)의 속성 타입입니다

    Dirname:$I30:$INDEX_ALLOCATION      해당 파일을 쓰게 되면 파일 대신 디렉터리가 생성됩니다.
                                        $I30 은 속성 0x30($FILE_NAME)의 인덱스(I)를 뜻합니다.

    Filename:AttrName:$AttrType         상기한 구문의 기본형입니다. NTFS 데이터 스트림은 실제로는 $DATA 타입의 속성을 의미하며, 스트림명은 속성의 명칭을 의미합니다.






























