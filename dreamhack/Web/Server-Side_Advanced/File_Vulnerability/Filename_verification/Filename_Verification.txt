파일명 검증 부재 :
    파일 경로에서 디렉터리명은 / 또는 \ 로 구분지으며, 현재 디렉터리는 . 로, 상위 디렉터리는 .. 로 나타냅니다. 한편 확장자는 . 으로 구분짓습니다.

    이렇듯 다양한 소프트웨어에서는 파일 경로에서 일부 문자에 특수한 의미를 부여합니다.

    만일 웹 서비스에서 파일을 업로드 또는 다운로드할 때 특수한 의미를 지닌 문자를 제대로 여과하지 않고 파일시스템에 사용하게 된다면 취약점이 발생할 수 있습니다.

    이러한 종류의 파일명 검증 취약점과 공격 및 방어에 대해 알아보겠습니다.

1) 파일명 널(NULL) 문자 삽입
    만약 파일명 파라미터에 %00 과 같은 URL 인코딩이 허용된다면 foo.php%00.jpg 와 같이 확장자 검사를 우회할 수 있습니다.
    이는 운영체제에서 널 문자 앞의 파일명만 인식하기 때문입니다.

2) Path Traversal
    .. 는 특수한 의미를 지니는 디렉터리명으로서 현재 디렉터리를 기준으로 상위 디렉터리를 접근할 수 있도록 합니다. 
    만약 웹 응용에서 Path Traversal 공격을 방어하지 않으면 업로드 디렉터리 외 경로의 파일을 접근할 수 있게 됩니다.
    추가적으로 윈도와 리눅스 상에서 .. 의 차이점에 대해 알아봅니다.

3) 잘못된 확장자 검사
    foo.jpg.php 와 같이 파일명의 확장자 부분이 모호한 경우가 있습니다.
    이때 웹 서버와 응용 사이에 확장자를 인식하는 방식이 달라 취약점이 발생하게 됩니다.

4) 파일명 문자열 치환 우회
    foo.p.phphp 와 같은 파일명에서 .php 를 제거하는 경우 foo.php 가 되어 문자열 치환 필터를 우회할 수 있습니다.

    

































