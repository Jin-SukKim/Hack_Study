Diffie-Hellman 알고리즘 - 수학적 원리 :
    1976년 Whitfield Diffie와 Martin Hellman은 공개된 채널로 키를 교환할 수 있는 Diffie-Hellman 키 교환 절차를 만들어냈습니다.
    이를 이해하기 위해선 다양한 수학적 배경지식이 필요하므로, 이들을 먼저 간략히 짚고 넘어가겠습니다.

    모듈로 연산에서의 거듭제곱 :
        임의의 합동 항등식에 대해, 양변에 동일한 값을 곱해도 식은 성립한다고 하였습니다.

        따라서 a^k ≡ b 일 떄, a^k ⋅ a^k ≡ a^2k ≡ b^2 (mod m)이 성립합니다.

        이를 이용하여 큰 지수에 대한 합동식을 빠르게 연산하는 알고리즘을 square and multiply라고 부릅니다.

        Diffie-Hellman 키 교환 알고리즘을 사용하려면 {2048}2048번 가까이 제곱된 어떤 수의 모듈러 값을 구해야 하는데, 
        이 방법을 사용하면 2048번 정도만 연산해도 그 값을 구할 수 있습니다.

    
    페르마의 소정리(Fermat's Little Theorem) :
        페르마의 소정리(Fermat's Little Theorem)는 "소수 p와 정수 a에 대해 a^p−1 ≡ 1 (mod p)이 성립한다"는 정리입니다.
        예를 들어, 소수 3737과 2, 3, 172,3,17은 페르마의 소정리에 따라
        2^36 ≡ 3^36 ≡ 17^36 ≡ 1 (mod 37)을 만족합니다.


    이산 로그 문제(Discrete Logarithm Problem) :
        이산 로그 문제(Discrete Logarithm Problem)는 "자연수 a, ma,m, 정수 bb에 대해 a^x ≡ b (mod m) ax ≡ b (modm)을 만족하는 정수 xx를 구하는 문제"입니다.
        
        이 문제의 어려움을 설명하기 위해 5^x≡52 (mod 61)를 만족하는 x를 구한다고 생각해봅시다.

        쉽게 떠올릴 수 있는 방법 중 하나는 5를 여러번 곱해가며 5^x(mod 61)을 계산하고, 이 값을 52와 비교하는 것입니다.
        프로그램으로 구현해서 실행하면 이를 만족하는 xx가 21임을 빠르게 알 수 있습니다.

        이번에는 m = 2^127-1, a = 2에 대해 a^x≡274877906944 (mod m)을 만족하는 x를 구한다고 생각해봅시다.
        앞에서와 달리 mm이 매우 크므로, 식이 성립하는 xx를 무차별 대입으로 찾기가 매우 어렵습니다.
        이산 로그 문제를 푸는 방법이 여럿 연구되었지만, 현재까지 알려진 최선의 방법으로도 이 문제를 푸려면 sqrt(m)번 정도의 연산을 해야합니다.        

        Diffie-Hellman 알고리즘의 안전성은 이산 로그 문제의 어려움에 바탕을 두고 있습니다.
        Diffie-Hellman키 교환 알고리즘에서 키를 모르는 공격자가 키를 구하려면 m이 2^2048정도 되는 이산 로그 문제를 풀어야합니다.
        이는 현재의 연산능력으로는 불가능하다고 알려져 있습니다.






















