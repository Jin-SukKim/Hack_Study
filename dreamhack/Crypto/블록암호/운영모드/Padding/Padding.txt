Padding (패딩) :
    블록 암호는 블록 단위로 암호화를 하므로 입력의 길이가 정확하게 블록 크기의 배수가 되어야 합니다. 
    그러나 일반적으로 평문의 크기는 블록 크기의 배수가 되지 않습니다.

    이런 문제를 해결하기 위해 평문에 데이터를 붙여서 평문의 크기가 블록 크기의 배수가 되도록 만드는 과정을 패딩(padding)이라고 합니다.

    패딩된 암호문을 복호화할 때는 복호화된 평문에서 패딩을 제거해야 원래의 평문을 얻을 수 있습니다.
    따라서 패딩된 암호문의 수신자는 어떤 패딩이 적용됐는지 알아야 암호문을 제대로 복호화할 수 있습니다.

    널리 사용되는 패딩 기법에는 비트 패딩(Bit Padding), 바이트 패딩(Byte Padding), 그리고 PKCS#7 패딩이 있습니다.

1)  비트 패딩(Bit Padding) :
    비트 패딩은 마지막 블록에서 평문이 채우지 못하는 비트 중 최상위 비트를 1로 설정하고, 나머지는 모두 0으로 채우는 패딩 기법입니다.
    ex)
        ∣ 1011 1011 1111 0111 ∣ 1011 0110 1000 0000 ∣

    수신자는 평문의 마지막 비트부터 처음으로 값이 1인 비트가 나올 때까지를 패딩으로 인식할 수 있으며, 이를 제거하여 평문을 복구할 수 있습니다.

    그런데 이 방법은 평문의 크기가 정확히 블록 크기의 배수일 때, 수신자가 메세지의 일부를 패딩으로 오인하게 되는 문제가 있습니다.
    이를 막기 위해 비트 패딩을 적용할 때는 평문의 크기가 블록 크기의 배수이면, 패딩으로 한 블록을 추가합니다.

    예를 들어, 평문이 |\ 1011\ 1011\ 1111\ 1000 |∣ 1011 1011 1111 1000∣ 이면 수신자는 뒤의 네 비트를 패딩으로 인식하고 제거합니다.
    따라서 송신자는 패딩으로 다음과 같이 한 블록을 추가해야합니다.
    ex)
        ∣ 1011 1011 1111 1000 ∣ 1000 0000 0000 0000 ∣

    이를 받은 수신자는 마지막 한 블록을 패딩으로 인식하여 제거하고, 평문을 오류 없이 복호화할 수 있습니다.

2) 바이트 패딩: ANSI X.923 :
    바이트 패딩(Byte Padding)은 바이트 단위로 패딩을 수행하는 패딩 기법입니다.
    바이트 패딩에는 여러 종류가 있습니다.
    그 중 ASNI X.923은 마지막 블록의 남는 바이트를 임의의 값(일반적으로 0)으로 채우고, 마지막 바이트에 패딩의 길이를 기록하는 기법입니다.

    아래의 경우는 마지막 바이트의 값이 4이므로 마지막 네 바이트(00 00 00 04)가 패딩이 됩니다.
    ex)
        ∣ A3 B2 91 81 50 23 00 00 ∣ 14 50 00 00 00 00 00 04 ∣

    ANSI X.923은 비트 패딩과 마찬가지로 평문의 크기가 블록 크기의 배수일 때, 수신자가 평문을 패딩으로 오인할 수 있습니다.
    따라서 평문의 크기가 블록 크기의 배수일 때는 마지막에 한 블록을 패딩으로 추가합니다.

3) 바이트 패딩: PKCS#7 :
    PKCS(Public-Key Cryptography Standard)는 공개키 암호의 표준 문서로서,
    그중 7번째 문서인 PKCS#7은 AES와 같은 블록 암호의 패딩 기법을 제시하고 있습니다.

    PKCS#7에 소개된 패딩 기법은 추가할 패딩의 바이트 크기로 마지막 블록을 채우는 패딩 기법입니다. 
    아래 예시는 PKCS#7으로 마지막 블록에 4바이트를 패딩한 것입니다.
    ex)
        ∣ A3 B2 91 81 50 23 00 00 ∣ 14 50 00 00 04 04 04 04 ∣

    다른 패딩 기법들과 마찬가지로 평문의 크기가 블록 크기의 배수이면,
    PKCS#7은 ∣ 08 08 08 08 08 08 08 08 ∣ 을 패딩으로 추가합니다.
































