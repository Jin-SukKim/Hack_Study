CBC(Cipher Block Chaining) 모드 :
    CBC(Cipher Block Chaining) 모드는 어떤 블록을 암호화하기 전에, 이 블록을 직전 블록의 암호문과 XOR합니다.
    평문의 첫 번째 블록은 이전 블록이 존재하지 않으므로, 초기 벡터(Initialization Vector, IV)라고 불리는 임의의 데이터와 XOR합니다. 
    이 모드를 사용하면 각 블록이 서로의 암호화에 영향을 주므로 같은 블록도 전체 평문 및 IV에 따라 암호화 결과가 달라집니다.

    송신자는 초기 벡터를 암호문의 0번째 블록 C0로 전송합니다.
    CBC 모드의 암복호화를 수학적으로 표현하면 다음과 같습니다. - 사진

    초기 벡터는 일반적으로 논스(Nonce, number used only once)라는 무작위 값을 사용하며, 이는 공격자가 알아도 안전성에 영향을 끼치지 않습니다. 
    그러나 만약 공격자가 암호문을 중간에 가로채서 이를 조작할 수 있으면, 복호화 결과의 첫 번째 블록을 조작할 수 있습니다.
    관련된 공격 기법은 다음 장에 소개하고 있습니다. 
    따라서 CBC 모드를 사용할 때는 초기 벡터의 무결성을 함께 보장해야 합니다.

    CBC모드는 한 블록을 암호화할 때 직전 블록의 암호화 결과를 사용하므로 여러 블록을 병렬적으로 암호화할 수 없습니다.
    그러나 복호화의 경우, 모든 암호문 블록을 알고 있으므로 병렬적으로 처리할 수 있습니다.

    CBC모드는 재전송 공격에 강인하며, 높은 혼돈성을 가지고 있어서 블록 암호의 운영 모드로 널리 사용되고 있습니다.

CBC Bit-Flipping Attack :
    공격자가 초기 벡터를 원하는 값으로 조작하여 복호화된 평문의 첫 번째 블록을 조작하는 공격을 CBC Bit-Flipping Attack이라고 합니다.

    첫 번째 암호문 블록의 복호화 과정을 수식으로 표현하면 다음과 같습니다. - 사진

    Alice가 'Alice has 10000$'이라는 16바이트 평문을 IV가 '\x00\x00\x00\x00'인 CBC 모드로, 4 바이트씩 블록 암호화하여 은행에 전송한다고 합시다.

    만약 Allie가 이 통신을 중간에서 가로채서 IV′=‘‘ALIC"⊕‘‘ALLI"⊕IV인 IV′으로 IV를 치환하고,
    암호문을 재구성하여 은행으로 전송하면 은행은 이를 복호화했을 때 'Allie has 10000$'라는 조작된 평문을 얻게 됩니다.



























