DES의 원리 - 순열과 치환, 그리고 곱 암호 :
    DES는 혼돈 성질을 만족하기 위해 치환(Substitution)을, 확산 성질을 만족하기 위해 순열(Permutation)을 사용합니다.

    치환과 순열을 매우 단순한 연산이므로 평문에 이들을 한 번 적용한다고 해서 암호학적 효과를 기대할 수는 없습니다.
    그러나 이들을 여러 번 교차해서 반복 적용하면 혼돈과 확산의 성질을 모두 만족하게 된다고 알려져 있습니다.
    이런 특성을 이용하여 치환이나 순열 같은 단순한 연산들로 한 라운드로 구성하고, 
    각 라운드를 여러 번 반복하여 암호학적 안전성을 확보하는 암호를 곱 암호(Product Cipher)라고 합니다.

    DES는 사진과 같이 여러 라운드에 걸쳐 치환과 순열을 반복하는 곱 암호의 일종입니다.
    DES외에도 많은 현대 블록 암호들은 곱 암호의 구조를 차용하고 있습니다.


페이스텔(Feistel) 구조 :
    DES에서 라운드 함수를 적용하는 전체 과정은 사진과 같은 페이스텔(Feistel) 구조를 이루고 있습니다.

    페이스텔 구조를 따르는 DES는 
        (1)입력으로 들어온 블록을 동일한 길이의 왼쪽 블록 L과 오른쪽 블록 R으로 나눕니다.
        (2)각 라운드마다 오른쪽 블록은 다음 라운드의 왼쪽 블록으로 입력됩니다.
        (3)왼쪽 블록은 오른쪽 블록에 라운드 함수 FF를 적용한 결과와 xor되어 다음 라운드의 오른쪽 블록으로 입력됩니다.

    이를 정형화해서 나타내면 다음과 같습니다. 
    여기서 PP는 입력으로 들어온 평문을, KK는 각 라운드에서 생성된 키를 말합니다. 
    키 생성과정은 곧 살펴보겠습니다.
        (1) L0 = P[:len(P)/2], R0 = P[len(P)/2:]
        (2) Ln+1 =Rn
    ​	 (3) Rn+1 = Ln ⊕ F(Rn, Kn)

    페이스텔 암호의 특징 :
        블록 암호는 평문을 복호화 할 수 있어야 하므로, 일반적으로 암호화를 구성하는 각 함수들에 역함수가 존재합니다.
        그러나 페이스텔 구조를 사용하면 FF가 복호화 과정에서 \oplus⊕로 상쇄되므로 역함수가 존재하지 않아도 됩니다.
        또한 암호화와 복호화의 구조가 동일하므로, 암호화에 사용한 라운드 키를 역순으로 입력하면 복호화가 이뤄집니다.

        한편, 구조사진을 보면 오른쪽 블록은 다음 라운드의 왼쪽 블록으로 어떠한 처리도 없이 입력됩니다.
        이런 특성으로 인해 페이스텔 암호는 비페이스텔 암호와 같은 안전성을 갖기 위해 두 배 정도 라운드를 사용해야한다는 단점이 있습니다.






























