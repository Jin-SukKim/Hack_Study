공개키암호 - RSA :
    RSA 암호 알고리즘은 공개키 암호시스템의 하나로, 전자 거래, 금융 거래, 인증서 등 다양한 분야에서 가장 보편적으로 사용되는 암호 및 인증 알고리즘입니다. 
    RSA 알고리즘은 1978년 MIT의 대학원생인 Ronald L. Rivest와 Adi Shamir, 그들의 지도 교수인 Leonard Adleman의 연구로 체계화된 알고리즘이며, 
    RSA라는 이름은 그들의 이름 첫 글자를 이어 붙인 것입니다.
    RSA는 1983년에 특허로 등록되었는데, 현재는 특허 기간이 만료되어 공공 및 민간 분야에서 널리 사용되고 있습니다.

    RSA 암호 알고리즘의 안전성은 아주 큰 두 소수의 곱으로 이루어진 합성수를 인수분해하기 어렵다는 인수분해 문제의 어려움에 기반합니다.
    따라서 RSA로 암호화할 때는 합성수의 소인수분해가 어려워지도록 각 인자를 적절히 설정해야 합니다.

    RSA는 암복호화 과정에서 AES를 비롯한 대칭키 암호 알고리즘보다 훨씬 많은 연산을 필요로 합니다.
    따라서 많은 데이터를 여러 번 암호화해야 하는 네트워크 통신에서는 잘 사용되지 않습니다.

    RSA 암호 알고리즘에서는 대칭키 암호와 달리 두 개의 키가 사용됩니다.
    하나는 공개키(Public Key)로 모든 사용자에게 공개되며, 평문을 암호화할 때 사용됩니다.
    다른 하나는 개인키(Private Key)로 타인에게 노출되어서는 안 되며, 공개키로 암호화된 암호문을 복호화할 때 사용됩니다.


오일러 정리 :
    RSA를 이해하려면 오일러 정리에 대해 알아야 합니다. 
    오일러 정리는 n과 서로소인 양의 정수 m이 다음 식을 만족한다는 정리입니다.

    m^(φ(n)) ≡ 1 (mod n)"

    여기서 φ(n)는 오일러 파이 함수(Euler's phi function)라고 불리며, n 이하의 양의 정수 중에서 n과 서로소인 수의 개수를 의미합니다.
    예를 들어 6 이하의 양의 정수 중 6과 서로소인 수는 1,5로 두 개이기 때문에 φ(6)=2이고, 
    소수pp의 경우에는 1부터 p−1까지 모두 p와 서로소이기 때문에 \varphi(p) = p-1φ(p)=p−1가 됩니다.


키 생성 :
    공개키 암호 알고리즘에서는 공개키와 개인키를 생성하는 키 생성 과정이 필요합니다.
    대칭키 암호 알고리즘에서는 임의의 난수를 선택하기만 하면 됐지만, RSA는 인수분해를 어렵게 만들기 위해 복잡한 연산을 거쳐 키를 생성해야 합니다.

    먼저 서로 다른 두 소수 p와 q를 선택합니다. 
    일반적으로 1024비트 이상에서 비트 길이가 같은 수로 생성합니다.

    그 뒤, p와 q를 곱하여 n을 구하고, φ(n)을 계산합니다.

    (1) n = p × q
        n=p×q인데 p와 q가 소수이므로, φ(n)은 n보다 작으면서 p와 q의 배수가 아닌 수들의 개수가 됩니다.
        n이하의 수 중, p의 배수는 q개, q의 배수는 p개 존재하며 이 중 같은 수는 두 수의 최소공배수인 n뿐입니다.
        따라서 φ(n)은 다음과 같은 식으로 표현될 수 있습니다.

    (2) φ(n) = p × q − p − q + 1= (p−1)(q−1)
        φ(n)을 구한 뒤, φ(n)보다 작은 수 중 φ(n)과 서로소인 e를 선택하고, d ≡ e^−1 mod φ(n)인 d를 구합니다.

    (3) e<φ(n), gcd(e,φ(n))=1

    (4) d≡e^−1 (mod φ(n))

    위 과정으로 생성한 값들 중, n과 e는 공개키로 d는 개인키로 사용됩니다.
    n은 modulus, ee는 공개 지수(public exponent), dd는 비밀 지수(private exponent)라고 불립니다.


암호화 :
    공개키 (n,e)(n,e)로 nn보다 작은 평문 mm을 암호화할 때, 암호문 cc는 다음 식으로 구해집니다.

    c ≡ m^e (mod n)


복호화 :
    암호문 cc를 개인키 dd로 복호화할 때, 평문 mm은 다음과 같이 구해질 수 있습니다.

    m≡c^d (mod n)

    c^d ≡(m^e)^d ≡ m^(ed) (mod n)

    오일러 정리에 따르면 d≡e^−1 (mod φ(n))이므로 ed = kφ(n)+1을 만족하는 자연수 k가 존재합니다.
    따라서 다음 등식이 성립합니다.

    m^(ed) ≡(m^(φ(n)))^k m(mod n)

    오일러 정리에 의해 m ^φ(n) ≡ 1 (mod n)이므로 (m^(φ(n)))^k m ≡ m (mod n)입니다.




안전한 RSA의 사용을 위해서 n, e, d를 주의해서 설정해야 한다는 점은 기억하시기 바랍니다.

대칭키 암호와 공개키 암호의 큰 차이점 중 하나는 공개키 암호는 어려운 수학 문제를 기반으로 하여 암호시스템의 안전성을 확보한다는 점입니다. 
인수분해의 어려움을 기반으로 하는 RSA 외에도 이산대수의 어려움을 기반으로 하는 ElGamal 암호,
타원곡선 상에서의 이산대수의 어려움을 기반으로 하는 Elliptic Curve ElGamal 암호 등 다양한 공개키 암호 알고리즘이 존재합니다.

"문제의 어려움"을 기초로하는 이러한 공개키 암호 알고리즘들은 관련된 문제를 쉽게 풀수있게하는 알고리즘이 제시되거나, 
컴퓨터의 연산 능력이 향상되면 안전성을 위협받게 됩니다.
이번 코스에서 소개드린 RSA의 경우, 양자 컴퓨터가 등장하면 쇼어 알고리즘으로 쉽게 풀릴 수 있다고 알려져있습니다. 
그래서 암호학자들은 이런 미래를 대비하고자 양자 컴퓨터가 등장한 이후의 암호 시스템(Post Quantum Cryptography, PQC)에 대해서도 활발히 연구하고 있습니다. 

RSA: 
    최초의 공개키 암호 시스템이며, 현재까지 널리 사용됨. 
    키를 교환하지 않아도 되지만, 대칭키 암호 시스템에 비해 속도가 느리다는 단점이 있음.

양자 저항 암호(Post Quantum Cryptography): 
    양자 알고리즘으로도 풀기 어려운 암호 시스템.







