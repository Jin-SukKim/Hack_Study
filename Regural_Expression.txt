정규표현식 (Regural Expression) :
    정규표현식은 간단하게 말하면 패턴을 확인하는 것이다.
    특정한 규칙을 가진 문자열의 집합을 표현하는 형식의 언어.

    기본 :
        불리언 "또는"
            수직선은 여러 항목 중 선택을 하기 위해 구분한다. 이를테면 gray|grey는 "gray" 또는 "grey"와 일치한다.
        
        그룹 묶기
            괄호를 사용하면 연산자의 범위와 우선권을 정의할 수 있다. 이를테면 gray|grey와 gr(a|e)y는 "gray"나 "grey" 집합을 둘 다 기술하는 동일 패턴이다.
        
        양의 지정
            ?	물음표는 0번 또는 1차례까지의 발생을 의미한다. 이를테면 colou?r는 "color"와 "colour"를 둘 다 일치시킨다.
            *	별표는 0번 이상의 발생을 의미한다. 이를테면 ab*c는 "ac", "abc", "abbc", "abbbc" 등을 일치시킨다.
            +	덧셈 기호는 1번 이상의 발생을 의미한다. 이를테면 ab+c는 "abc", "abbc", "abbbc" 등을 일치시키지만 "ac"는 일치시키지 않는다.
            {n}[6]	정확히 n 번만큼 일치시킨다.
            {min,}[6]	"min"번 이상만큼 일치시킨다.
            {min,max}[6]	적어도 "min"번만큼 일치시키지만 "max"번을 초과하여 일치시키지는 않는다. 

    정규 표현식의 용어 :
        표현식                  의미 
        ^x              문자열의 시작을 표현하며 x 문자로 시작됨을 의미한다.
        x$              문자열의 종료를 표현하며 x 문자로 종료됨을 의미한다.
        .x              임의의 한 문자의 자리수를 표현하며 문자열이 x 로 끝난다는 것을 의미한다.
        x+              반복을 표현하며 x 문자가 한번 이상 반복됨을 의미한다.
        x?              존재여부를 표현하며 x 문자가 존재할 수도, 존재하지 않을 수도 있음을 의미한다.
        x*              반복여부를 표현하며 x 문자가 0번 또는 그 이상 반복됨을 의미한다.
        x|y             or 를 표현하며 x 또는 y 문자가 존재함을 의미한다.
        (x)             그룹을 표현하며 x 를 그룹으로 처리함을 의미한다.
        (x)(y)          그룹들의 집합을 표현하며 앞에서 부터 순서대로 번호를 부여하여 관리하고 x, y 는 각 그룹의 데이터로 관리된다.
        (x)(?:y)        그룹들의 집합에 대한 예외를 표현하며 그룹 집합으로 관리되지 않음을 의미한다. 
        x{n}            반복을 표현하며 x 문자가 n번 반복됨을 의미한다.
        x{n,}           반복을 표현하며 x 문자가 n번 이상 반복됨을 의미한다.
        x{n,m}          반복을 표현하며 x 문자가 최소 n번 이상 최대 m 번 이하로 반복됨을 의미한다.

    플래그(flags)
    정규 표현식을 생성할 때 플래그를 사용하여 기본 검색 설정을 변경할 수 있습니다.

    이렇게 설정된 플래그는 나중에 추가되거나 삭제될 수 없습니다.

    플래그(flag)

    설명
        i	검색 패턴을 비교할 때 대소문자를 구분하지 않도록 설정함. ex) /i
        g	검색 패턴을 비교할 때 일치하는 모든 부분을 선택하도록 설정함.
        m	검색 패턴을 비교할 때 여러 줄의 입력 문자열을 그 상태 그대로 여러 줄로 비교하도록 설정함.
        y	대상 문자열의 현재 위치부터 비교를 시작하도록 설정함.

    POSIX 표준 :
        메타문자	 기능	                    설명
        .	        문자	            1개의 문자와 일치한다. 단일행 모드에서는 새줄 문자를 제외한다.
        [ ]	        문자                클래스	"["과 "]" 사이의 문자 중 하나를 선택한다. "¦"를 여러 개 쓴 것과 같은 의미이다. 예를 들면 [abc]d는 ad, bd, cd를 뜻한다. 또한, "-" 기호와 함께 쓰면 범위를 지정할 수 있다. "[a-z]"는 a부터 z까지 중 하나, "[1-9]"는 1부터 9까지 중의 하나를 의미한다.
        [^ ]	    부정	            문자 클래스 안의 문자를 제외한 나머지를 선택한다. 예를 들면 [^abc]d는 ad, bd, cd는 포함하지 않고 ed, fd 등을 포함한다. [^a-z]는 알파벳 소문자로 시작하지 않는 모든 문자를 의미한다.
        ^	        처음	            문자열이나 행의 처음을 의미한다.
        $	        끝	                문자열이나 행의 끝을 의미한다.
        ( )	        하위식	            여러 식을 하나로 묶을 수 있다. "abc¦adc"와 "a(b¦d)c"는 같은 의미를 가진다.
        \n	        일치하는 n번째 패턴	 일치하는 패턴들 중 n번째를 선택하며, 여기에서 n은 1에서 9 중 하나가 올 수 있다.
        *	        0회 이상	        0개 이상의 문자를 포함한다. "a*b"는 "b", "ab", "aab", "aaab"를 포함한다.
        {m, n}	    m회 이상 n회 이하	"a{1,3}b"는 "ab", "aab", "aaab"를 포함하지만, "b"나 "aaaab"는 포함하지 않는다.


    확장 문법 :
        메타문자	 기능	                설명
        ?	        0 또는 1회	        "a?b"는 "b", "ab"를 포함한다.
        +	        1회 이상	        "a+b"는 "ab", "aab", "aaab"를 포함하지만 "b"는 포함하지 않는다.
        ¦	        선택	            여러 식 중에서 하나를 선택한다. 예를 들어, "abc¦adc"는 abc와 adc 문자열을 모두 포함한다.


    표현식      설명 

    ^       문자열의 시작

    $       문자열의 종료

    .       임의의 한 문자 (문자의 종류 가리지 않음)
            단, \ 는 넣을 수 없음

    *       앞 문자가 없을 수도 무한정 많을 수도 있음

    +       앞 문자가 하나 이상
    ?       앞 문자가 없거나 하나있음
    []      문자의 집합이나 범위를 나타내며 두 문자 사이는 - 기호로 범위를 나타낸다. []내에서 ^가 선행하여 존재하면 not 을 나타낸다.

    {}      횟수 또는 범위를 나타낸다.
    ()      소괄호 안의 문자를 하나의 문자로 인식 

    |       패턴 안에서 or 연산을 수행할 때 사용

    \s      공백 문자

    \S      공백 문자가 아닌 나머지 문자

    \w      알파벳이나 숫자
    \W      알파벳이나 숫자를 제외한 문자
    \d      숫자 [0-9]와 동일
    \D      숫자를 제외한 모든 문자
    \       정규표현식 역슬래시(\)는 확장 문자
            역슬래시 다음에 일반 문자가 오면 특수문자로 취급하고 역슬래시 다음에 특수문자가 오면 그 문자 자체를 의미
    (?i)    앞 부분에 (?i) 라는 옵션을 넣어주면 대소문자를 구분하지 않음
